{"version":3,"sources":["components/logo-multiply.svg","components/Header.js","components/MathUtils.js","components/Question.js","components/Score.js","components/Chronometer.js","components/store.js","components/Difficulty.js","timeout.js","components/Confetti.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","className","src","logo","width","height","alt","ADD_INT_SIMPLE_NUMBER","ADD_INT_1_NUMBER","ADD_INT_2_NUMBER","ADD_INT_3_NUMBER","SUBSTRACT_INT_1_NUMBER","SUBSTRACT_INT_2_NUMBER","SUBSTRACT_INT_3_NUMBER","SUBSTRACT_NEGATIVE_INT_1_NUMBER","SUBSTRACT_NEGATIVE_INT_2_NUMBER","MULTIPLY_INT_1_NUMBER","MULTIPLY_INT_2_NUMBER","MULTIPLY_INT_TENS_NUMBER","MULTIPLY_SIMPLE_FLOAT_NUMBER","DIVIDE_SIMPLE_FLOAT_NUMBER","DIVIDE_INT_2_NUMBER","DIVIDE_INT_TENS_NUMBER","getRandomSimpleFloat","power","getRandomInt","Math","pow","getRandomFloat","n1","n2","min","max","rnd","random","round","generateNumbers","difficulty","x","Error","getOperation","checkResult","y","result","parsedResult","parseFloat","replace","computedResult","compute","abs","Question","disabled","onSubmit","useState","value","setValue","useEffect","type","name","onChange","e","nb","target","autoFocus","pattern","inputMode","maxLength","getPoints","Score","score","getClassNameAccordintToTime","t","Chronometer","show","Date","now","initial","setInitial","lastTime","setLastTime","count","setCount","times","setTimes","time","toFixed","average","KEY","pickRandomDifficulty","difficulties","availableDifficulties","Object","entries","filter","map","key","length","labels","getDefaultDifficulties","savedDifficulty","savedObj","localStorage","getItem","JSON","parse","load","Difficulty","onDifficultiesChange","obj","options","checked","newDifficulties","values","find","v","setItem","stringify","Confetti","win","enabled","setEnabled","confetti","particleCount","spread","origin","App","setWin","setDifficulties","setDifficulty","setScore","numbers","setNumbers","defaultDelay","id","setId","useCallback","fn","delay","clearTimeout","setTimeout","useTimeout","setWinTimeout","getNewQuestion","a","b","newDifficulty","d","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e3ad71fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-multiply.562cea21.svg\";","import './Header.css'\nimport logo from './logo-multiply.svg'\n\nexport default function Header() {\n    return (\n        <header className=\"header\">\n            <img\n                src={logo}\n                width={32}\n                height={32}\n                className=\"header-logo\"\n                alt=\"\"\n            />\n            ️ Math Game\n        </header>\n    )\n}\n","export const ADD_INT_SIMPLE_NUMBER = 'ADD_INT_SIMPLE_NUMBER'\nexport const ADD_INT_1_NUMBER = 'ADD_INT_1_NUMBER'\nexport const ADD_INT_2_NUMBER = 'ADD_INT_2_NUMBER'\nexport const ADD_INT_3_NUMBER = 'ADD_INT_3_NUMBER'\nexport const SUBSTRACT_INT_1_NUMBER = 'SUBSTRACT_INT_1_NUMBER'\nexport const SUBSTRACT_INT_2_NUMBER = 'SUBSTRACT_INT_2_NUMBER'\nexport const SUBSTRACT_INT_3_NUMBER = 'SUBSTRACT_INT_3_NUMBER'\nexport const SUBSTRACT_NEGATIVE_INT_1_NUMBER = 'SUBSTRACT_NEGATIVE_INT_1_NUMBER'\nexport const SUBSTRACT_NEGATIVE_INT_2_NUMBER = 'SUBSTRACT_NEGATIVE_INT_2_NUMBER'\nexport const MULTIPLY_INT_1_NUMBER = 'MULTIPLY_INT_1_NUMBER'\nexport const MULTIPLY_INT_2_NUMBER = 'MULTIPLY_INT_2_NUMBER'\nexport const MULTIPLY_INT_TENS_NUMBER = 'MULTIPLY_INT_TENS_NUMBER'\nexport const MULTIPLY_SIMPLE_FLOAT_NUMBER = 'MULTIPLY_SIMPLE_FLOAT_NUMBER'\nexport const DIVIDE_SIMPLE_FLOAT_NUMBER = 'DIVIDE_SIMPLE_FLOAT_NUMBER'\nexport const DIVIDE_INT_2_NUMBER = 'DIVIDE_INT_2_NUMBER'\nexport const DIVIDE_INT_TENS_NUMBER = 'DIVIDE_INT_TENS_NUMBER'\n\nexport const getRandomSimpleFloat = (power = getRandomInt(1, 3)) =>\n    1 / Math.pow(10, power)\n\nexport const getRandomFloat = (\n    n1 = getRandomInt(1, 999),\n    n2 = getRandomInt(10, 999),\n    power = getRandomInt(1, 3)\n) => n1 + n2 / Math.pow(10, power)\n\nexport const getRandomInt = (min, max, rnd = Math.random()) =>\n    Math.round(rnd * (max - min) + min)\n\nexport const generateNumbers = (difficulty) => {\n    switch (difficulty) {\n        case MULTIPLY_SIMPLE_FLOAT_NUMBER:\n            return [getRandomSimpleFloat(), getRandomFloat()]\n        case DIVIDE_SIMPLE_FLOAT_NUMBER:\n            return [getRandomFloat(), getRandomSimpleFloat()]\n        case DIVIDE_INT_2_NUMBER:\n            const x = getRandomInt(2, 10)\n            return [getRandomInt(2, 9) * x, x]\n        case MULTIPLY_INT_2_NUMBER:\n        case ADD_INT_2_NUMBER:\n            return [getRandomInt(10, 100), getRandomInt(2, 10)]\n        case ADD_INT_3_NUMBER:\n            return [getRandomInt(100, 1000), getRandomInt(2, 10)]\n        case ADD_INT_SIMPLE_NUMBER:\n            return [getRandomInt(0, 5), getRandomInt(1, 5)]\n        case MULTIPLY_INT_1_NUMBER:\n        case ADD_INT_1_NUMBER:\n            return [getRandomInt(2, 10), getRandomInt(2, 10)]\n        case MULTIPLY_INT_TENS_NUMBER:\n            return [getRandomInt(2, 100), Math.pow(10, getRandomInt(1, 4))]\n        case DIVIDE_INT_TENS_NUMBER:\n            return [getRandomInt(100, 9999), Math.pow(10, getRandomInt(1, 4))]\n        case SUBSTRACT_INT_1_NUMBER:\n            return [getRandomInt(5, 10), getRandomInt(1, 5)]\n        case SUBSTRACT_INT_2_NUMBER:\n            return [getRandomInt(50, 99), getRandomInt(1, 50)]\n        case SUBSTRACT_INT_3_NUMBER:\n            return [getRandomInt(100, 999), getRandomInt(1, 100)]\n        case SUBSTRACT_NEGATIVE_INT_1_NUMBER:\n            return [getRandomInt(1, 10), getRandomInt(5, 10)]\n        case SUBSTRACT_NEGATIVE_INT_2_NUMBER:\n            return [getRandomInt(1, 50), getRandomInt(50, 100)]\n        default:\n            throw new Error('difficulty is not set')\n    }\n}\n\nexport const getOperation = (difficulty) => {\n    switch (difficulty) {\n        case DIVIDE_INT_2_NUMBER:\n        case DIVIDE_SIMPLE_FLOAT_NUMBER:\n        case DIVIDE_INT_TENS_NUMBER:\n            return '÷'\n        case MULTIPLY_INT_1_NUMBER:\n        case MULTIPLY_INT_2_NUMBER:\n        case MULTIPLY_SIMPLE_FLOAT_NUMBER:\n        case MULTIPLY_INT_TENS_NUMBER:\n            return 'x'\n        case SUBSTRACT_INT_1_NUMBER:\n        case SUBSTRACT_INT_2_NUMBER:\n        case SUBSTRACT_INT_3_NUMBER:\n        case SUBSTRACT_NEGATIVE_INT_1_NUMBER:\n        case SUBSTRACT_NEGATIVE_INT_2_NUMBER:\n            return '-'\n        case ADD_INT_SIMPLE_NUMBER:\n        case ADD_INT_1_NUMBER:\n        case ADD_INT_2_NUMBER:\n        case ADD_INT_3_NUMBER:\n        default:\n            return '+'\n    }\n}\n\nconst compute = ({ difficulty, x, y }) => {\n    switch (getOperation(difficulty)) {\n        case 'x':\n            return x * y\n        case '÷':\n            return x / y\n        case '+':\n            return x + y\n        case '-':\n            return x - y\n        default:\n            throw new Error('difficulty is not set')\n    }\n}\n\nexport const checkResult = ({ difficulty, x, y, result }) => {\n    const parsedResult = parseFloat((result || '').replace(',', '.'))\n    const computedResult = compute({ difficulty, x, y })\n    return Math.abs(parsedResult - computedResult) < 0.000000001\n}\n","import { useEffect, useState } from 'react'\nimport { getOperation } from './MathUtils'\nimport './Question.css'\n\nexport default function Question({\n    x,\n    y,\n    difficulty,\n    disabled = false,\n    onSubmit = () => {},\n}) {\n    const [value, setValue] = useState()\n    useEffect(() => setValue(''), [x, y])\n\n    const onNumberChange = (e) => {\n        if (!disabled) {\n            const nb = e.target.value\n            setValue(nb)\n            onSubmit(nb)\n        }\n    }\n\n    return (\n        <div className=\"question\">\n            <span className=\"question-q\">\n                {x} {getOperation(difficulty)} {y} ={' '}\n            </span>\n            <input\n                type=\"text\"\n                name=\"answer\"\n                value={value}\n                onChange={onNumberChange}\n                className=\"question-answer\"\n                autoFocus\n                pattern=\"[\\.,0-9]*\"\n                inputMode=\"numeric\"\n                maxLength=\"8\"\n            />{' '}\n            ?\n        </div>\n    )\n}\n","import './Score.css'\n\nexport const getPoints = (difficulty) => {\n    return (\n        {\n            ADD_INT_SIMPLE_NUMBER: 1,\n            ADD_INT_1_NUMBER: 2,\n            MULTIPLY_INT_TENS_NUMBER: 2,\n            SUBSTRACT_INT_1_NUMBER: 2,\n            DIVIDE_INT_TENS_NUMBER: 3,\n            ADD_INT_2_NUMBER: 3,\n            SUBSTRACT_NEGATIVE_INT_1_NUMBER: 3,\n            ADD_INT_3_NUMBER: 4,\n            SUBSTRACT_INT_2_NUMBER: 4,\n            MULTIPLY_SIMPLE_FLOAT_NUMBER: 4,\n            DIVIDE_SIMPLE_FLOAT_NUMBER: 4,\n            MULTIPLY_INT_1_NUMBER: 5,\n            SUBSTRACT_NEGATIVE_INT_2_NUMBER: 5,\n            SUBSTRACT_INT_3_NUMBER: 5,\n            DIVIDE_INT_2_NUMBER: 5,\n            MULTIPLY_INT_2_NUMBER: 6,\n        }[difficulty] || 1\n    )\n}\n\nexport default function Score({ score }) {\n    return <div className=\"score\">Score : {score}</div>\n}\n","import './Chronometer.css'\nimport { useEffect, useState } from 'react'\n\nfunction getClassNameAccordintToTime(t) {\n    if (t < 3) return 'fast'\n    if (t < 6) return 'medium'\n    if (t < 9) return 'long'\n    return 'verylong'\n}\n\nexport default function Chronometer({ x, y, show }) {\n    const [initial, setInitial] = useState(Date.now())\n    const [lastTime, setLastTime] = useState()\n    const [count, setCount] = useState(0)\n    const [times, setTimes] = useState(0)\n\n    useEffect(() => {\n        if (show) {\n            const time = (Date.now() - initial) / 1000\n            setLastTime(time)\n            setCount(count + 1)\n            setTimes(times + time)\n        }\n    }, [show])\n\n    useEffect(() => {\n        setInitial(Date.now())\n    }, [x, y])\n    if (!lastTime) return null\n\n    const time = lastTime.toFixed(1)\n    const average = (times / count).toFixed(1)\n\n    return (\n        <div className=\"chronometer\">\n            <div>\n                Time :{' '}\n                <span className={getClassNameAccordintToTime(time)}>\n                    {time} sec.\n                </span>\n            </div>\n            <div>\n                Average :{' '}\n                <span className={getClassNameAccordintToTime(average)}>\n                    {average} sec.\n                </span>\n            </div>\n        </div>\n    )\n}\n","const KEY = 'mathGameDifficulty'\n\nexport const load = () => {\n    const savedObj = localStorage.getItem(KEY)\n    if (savedObj) return JSON.parse(savedObj)\n    return null\n}\nexport const save = (obj) => localStorage.setItem(KEY, JSON.stringify(obj))\n","import './Difficulty.css'\nimport {\n    getRandomInt,\n    ADD_INT_1_NUMBER,\n    ADD_INT_2_NUMBER,\n    ADD_INT_3_NUMBER,\n    ADD_INT_SIMPLE_NUMBER,\n    MULTIPLY_INT_1_NUMBER,\n    MULTIPLY_INT_2_NUMBER,\n    MULTIPLY_SIMPLE_FLOAT_NUMBER,\n    DIVIDE_INT_2_NUMBER,\n    DIVIDE_SIMPLE_FLOAT_NUMBER,\n    MULTIPLY_INT_TENS_NUMBER,\n    DIVIDE_INT_TENS_NUMBER,\n    SUBSTRACT_INT_1_NUMBER,\n    SUBSTRACT_INT_2_NUMBER,\n    SUBSTRACT_INT_3_NUMBER,\n    SUBSTRACT_NEGATIVE_INT_1_NUMBER,\n    SUBSTRACT_NEGATIVE_INT_2_NUMBER,\n} from './MathUtils'\nimport { getPoints } from './Score'\nimport { load, save } from './store'\n\nexport const pickRandomDifficulty = (difficulties) => {\n    const availableDifficulties = Object.entries(difficulties)\n        .filter(([_, value]) => value)\n        .map(([key, value]) => key)\n    return availableDifficulties[\n        getRandomInt(0, availableDifficulties.length - 1)\n    ]\n}\n\nconst labels = {\n    ADD_INT_SIMPLE_NUMBER: 'simple addition like 2 + 2',\n    ADD_INT_1_NUMBER: 'addition like 2 + 5',\n    ADD_INT_2_NUMBER: 'addition like 53 + 9',\n    ADD_INT_3_NUMBER: 'addition like 532 + 3',\n    SUBSTRACT_INT_1_NUMBER: 'simple substraction like 6 - 3',\n    SUBSTRACT_INT_2_NUMBER: 'substraction like 45 - 12',\n    SUBSTRACT_INT_3_NUMBER: 'substraction like 211 - 122',\n    SUBSTRACT_NEGATIVE_INT_1_NUMBER:\n        'simple substraction with negative numbers like 4 - 6',\n    SUBSTRACT_NEGATIVE_INT_2_NUMBER:\n        'substraction with negative numbers like 12 - 22',\n    MULTIPLY_INT_1_NUMBER: 'classic multiplication like 2 x 5',\n    MULTIPLY_INT_2_NUMBER: 'multiplication like 32 x 3',\n    DIVIDE_INT_2_NUMBER: 'classic division like 30 ÷  5',\n    MULTIPLY_INT_TENS_NUMBER: 'multiplication with 10, 100, 1000',\n    MULTIPLY_SIMPLE_FLOAT_NUMBER: 'multiplication like 23.111 x 0.001 ',\n    DIVIDE_SIMPLE_FLOAT_NUMBER: 'division like 132.34 ÷ 0.01',\n    DIVIDE_INT_TENS_NUMBER: 'division with 10, 100, 1000',\n}\n\nexport const getDefaultDifficulties = () => {\n    const savedDifficulty = load()\n    return {\n        [ADD_INT_SIMPLE_NUMBER]: false,\n        [ADD_INT_1_NUMBER]: false,\n        [ADD_INT_2_NUMBER]: false,\n        [ADD_INT_3_NUMBER]: false,\n        [SUBSTRACT_INT_1_NUMBER]: false,\n        [SUBSTRACT_INT_2_NUMBER]: false,\n        [SUBSTRACT_INT_3_NUMBER]: false,\n        [SUBSTRACT_NEGATIVE_INT_1_NUMBER]: false,\n        [SUBSTRACT_NEGATIVE_INT_2_NUMBER]: false,\n        [MULTIPLY_INT_1_NUMBER]: true,\n        [MULTIPLY_INT_2_NUMBER]: false,\n        [MULTIPLY_INT_TENS_NUMBER]: false,\n        [MULTIPLY_SIMPLE_FLOAT_NUMBER]: false,\n        [DIVIDE_INT_2_NUMBER]: false,\n        [DIVIDE_INT_TENS_NUMBER]: false,\n        [DIVIDE_SIMPLE_FLOAT_NUMBER]: false,\n        ...savedDifficulty,\n    }\n}\n\nconst checkAtLeastOneValue = (options) =>\n    Object.values(options).find((v) => v) === true\n\nexport default function Difficulty({\n    difficulties,\n    onDifficultiesChange = () => {},\n}) {\n    const onChange = (e) => {\n        const value = e.target.checked\n        const newDifficulties = { ...difficulties, [e.target.value]: value }\n\n        if (checkAtLeastOneValue(newDifficulties)) {\n            onDifficultiesChange(newDifficulties)\n            save(newDifficulties)\n        }\n    }\n    return (\n        <div className=\"difficulties\">\n            Operations :\n            {Object.entries(difficulties).map(([key, value]) => (\n                <label className=\"difficulties-option\" key={key}>\n                    <input\n                        type=\"checkbox\"\n                        name=\"difficulties\"\n                        onChange={onChange}\n                        value={key}\n                        checked={value}\n                    ></input>{' '}\n                    {labels[key]}{' '}\n                    <small className=\"difficulties-point\">\n                        {getPoints(key)} points\n                    </small>\n                </label>\n            ))}\n        </div>\n    )\n}\n","import { useCallback, useState } from 'react'\n\n// Thx Manuel ;-)\nexport const useTimeout = (defaultDelay = 0) => {\n    const [id, setId] = useState()\n\n    const launch = useCallback(\n        (fn, delay = defaultDelay) => {\n            clearTimeout(id)\n            setId(setTimeout(fn, delay))\n        },\n        [id, defaultDelay]\n    )\n\n    return [launch]\n}\n","import confetti from 'canvas-confetti'\nimport { useEffect, useState } from 'react'\nimport './Confetti.css'\n\nexport default function Confetti({ win }) {\n    const [enabled, setEnabled] = useState(true)\n    useEffect(() => {\n        win &&\n            enabled &&\n            confetti({\n                particleCount: 80,\n                spread: 50,\n                origin: { y: 0.6 },\n            })\n    }, [win, enabled])\n\n    const onChange = (e) => setEnabled(e.target.checked)\n\n    return (\n        <label className=\"confetti\">\n            <input\n                type=\"checkbox\"\n                checked={enabled}\n                onChange={onChange}\n            ></input>\n            Confetti ?\n        </label>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Question from './components/Question'\nimport Score, { getPoints } from './components/Score'\nimport Chronometer from './components/Chronometer'\nimport Difficulty, {\n    getDefaultDifficulties,\n    pickRandomDifficulty,\n} from './components/Difficulty'\nimport { generateNumbers } from './components/MathUtils'\nimport { checkResult } from './components/MathUtils'\nimport { useTimeout } from './timeout'\nimport Confetti from './components/Confetti'\n\nexport default function App() {\n    const [win, setWin] = useState(false)\n    const [difficulties, setDifficulties] = useState(getDefaultDifficulties())\n    const [difficulty, setDifficulty] = useState(\n        pickRandomDifficulty(difficulties)\n    )\n\n    const [score, setScore] = useState(0)\n    const [numbers, setNumbers] = useState(generateNumbers(difficulty))\n\n    const [setWinTimeout] = useTimeout(300)\n\n    const getNewQuestion = () => {\n        const newDifficulty = pickRandomDifficulty(difficulties)\n        setDifficulty(newDifficulty)\n        let a, b\n        do {\n            ;[a, b] = generateNumbers(newDifficulty)\n        } while (a === numbers[0] && b === numbers[1])\n        setNumbers([a, b])\n        setWin(false)\n    }\n\n    const checkAnswer = (result) => {\n        setWin(false)\n        if (checkResult({ difficulty, x, y, result })) {\n            setWin(true)\n            setScore(score + getPoints(difficulty))\n            setWinTimeout(getNewQuestion)\n        }\n    }\n\n    useEffect(getNewQuestion, [difficulties])\n\n    const [x, y] = numbers\n    return (\n        <div className=\"app\">\n            <Header className=\"app-header\" />\n            <section className=\"app-main\">\n                <Question\n                    x={x}\n                    y={y}\n                    difficulty={difficulty}\n                    disabled={win}\n                    onSubmit={checkAnswer}\n                />\n                <Score score={score} />\n                <Chronometer x={x} y={y} show={win} />\n            </section>\n            <section className=\"app-options\">\n                <details className=\"app-details\">\n                    <summary className=\"app-summary\">Options</summary>\n                    <Difficulty\n                        difficulties={difficulties}\n                        onDifficultiesChange={(d) => setDifficulties(d)}\n                    />\n                    <Confetti win={win} />\n                    <p>\n                        That web application is free software -{' '}\n                        <a href=\"https://github.com/paulgreg/math-game/blob/main/LICENSE.md\">\n                            MIT License\n                        </a>{' '}\n                        - Source code on{' '}\n                        <a href=\"https://github.com/paulgreg/math-game\">\n                            github\n                        </a>\n                    </p>\n                </details>\n            </section>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}